[{"/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/App.tsx":"1","/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/index.tsx":"2","/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/Map/Map.tsx":"3","/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/utils/GoogleMapsUtils.ts":"4"},{"size":708,"mtime":1612463286339,"results":"5","hashOfConfig":"6"},{"size":449,"mtime":1612333301277,"results":"7","hashOfConfig":"6"},{"size":7803,"mtime":1612478465942,"results":"8","hashOfConfig":"6"},{"size":1028,"mtime":1612467480606,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vy32sc",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/App.tsx",[],"/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/index.tsx",[],"/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/Map/Map.tsx",["19","20","21","22"],"import React, { useEffect, useRef, useState } from \"react\";\nimport css from \"./Map.module.scss\";\nimport hat from \"../assets/hat.svg\";\n// Interfaces/Types\ninterface IMap {\n   mapType: google.maps.MapTypeId;\n   mapTypeControl?: boolean;\n   mapContainerStyle?: google.maps.MapOptions;\n}\n\ninterface IMarker {\n   address: string;\n   latitude: number;\n   longitude: number;\n}\n\ntype GoogleLatLng = google.maps.LatLng;\ntype GoogleMap = google.maps.Map;\ntype GoogleMarker = google.maps.Marker;\n\nconst mapStyles: object[] = [\n   {\n      featureType: \"all\",\n      elementType: \"labels.text.stroke\",\n      stylers: [\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n         {\n            color: \"#56331d\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative.country\",\n      elementType: \"geometry.fill\",\n      stylers: [\n         {\n            saturation: \"13\",\n         },\n         {\n            lightness: \"-4\",\n         },\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative.country\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n         {\n            color: \"#56331d\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative.neighborhood\",\n      elementType: \"labels.text\",\n      stylers: [\n         {\n            color: \"#56331d\",\n         },\n         {\n            saturation: \"0\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative.neighborhood\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n         {\n            color: \"#ab693f\",\n         },\n         {\n            saturation: \"0\",\n         },\n      ],\n   },\n   {\n      featureType: \"administrative.neighborhood\",\n      elementType: \"labels.text.stroke\",\n      stylers: [\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"landscape\",\n      elementType: \"all\",\n      stylers: [\n         {\n            color: \"#f2f2f2\",\n         },\n      ],\n   },\n   {\n      featureType: \"landscape\",\n      elementType: \"geometry\",\n      stylers: [\n         {\n            visibility: \"on\",\n         },\n         {\n            color: \"#ffffff\",\n         },\n      ],\n   },\n   {\n      featureType: \"landscape\",\n      elementType: \"geometry.stroke\",\n      stylers: [\n         {\n            weight: \"0.62\",\n         },\n         {\n            color: \"#ffd8b4\",\n         },\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n   {\n      featureType: \"landscape.natural.landcover\",\n      elementType: \"geometry.fill\",\n      stylers: [\n         {\n            color: \"#ff0000\",\n         },\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"poi\",\n      elementType: \"all\",\n      stylers: [\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"road\",\n      elementType: \"all\",\n      stylers: [\n         {\n            saturation: -100,\n         },\n         {\n            lightness: 45,\n         },\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n   {\n      featureType: \"road.highway\",\n      elementType: \"all\",\n      stylers: [\n         {\n            visibility: \"simplified\",\n         },\n      ],\n   },\n   {\n      featureType: \"road.highway\",\n      elementType: \"geometry.fill\",\n      stylers: [\n         {\n            color: \"#eccca8\",\n         },\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"road.highway\",\n      elementType: \"geometry.stroke\",\n      stylers: [\n         {\n            color: \"#713700\",\n         },\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"road.highway\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n         {\n            color: \"#451e07\",\n         },\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n   {\n      featureType: \"road.arterial\",\n      elementType: \"labels.icon\",\n      stylers: [\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"transit\",\n      elementType: \"all\",\n      stylers: [\n         {\n            visibility: \"off\",\n         },\n      ],\n   },\n   {\n      featureType: \"water\",\n      elementType: \"all\",\n      stylers: [\n         {\n            color: \"#fee2c8\",\n         },\n         {\n            visibility: \"on\",\n         },\n      ],\n   },\n];\n\nconst Map: React.FC<IMap> = (props) => {\n   const { mapType, mapTypeControl = false } = props;\n\n   // Hooks\n   const ref = useRef<HTMLDivElement>(null);\n   const [map, setMap] = useState<GoogleMap>();\n   const [marker, setMarker] = useState<IMarker>();\n\n   // Methods\n   const startMap = (): void => {\n      if (!map) {\n         defaultMapStart();\n      }\n   };\n\n   // Create initial map w/initial zoom and address\n   const defaultMapStart = (): void => {\n      const defaultAddress = new google.maps.LatLng(41.892914, -87.63591);\n      initMap(14, defaultAddress);\n   };\n\n   const initMap = (zoomLevel: number, address: GoogleLatLng): void => {\n      if (ref.current) {\n         // Return map object if ref is ready\n         setMap(\n            new google.maps.Map(ref.current, {\n               zoom: zoomLevel,\n               center: address,\n               streetViewControl: false,\n               rotateControl: false,\n               scaleControl: false,\n               zoomControl: true,\n               gestureHandling: \"cooperative\",\n               draggableCursor: mapType,\n               mapTypeId: mapType,\n               styles: mapStyles,\n               disableDefaultUI: true,\n               mapTypeControl: false,\n            })\n         );\n      }\n   };\n\n   // Listen for clicks for the markers\n   const initEventListener = (): void => {\n      if (map) {\n         google.maps.event.addListener(map, \"click\", function (e) {\n            console.log(e);\n            coordinateToAddress(e.latLng);\n         });\n      }\n   };\n\n   // API call\n   const coordinateToAddress = async (coordinate: GoogleLatLng) => {\n      const geocoder = new google.maps.Geocoder();\n      await geocoder.geocode(\n         { location: coordinate },\n         function (results, status) {\n            if (status === \"OK\") {\n               console.log(results[0].formatted_address);\n               setMarker({\n                  address: results[0].formatted_address,\n                  latitude: coordinate.lat(),\n                  longitude: coordinate.lng(),\n               });\n            } else {\n               // Do something\n            }\n         }\n      );\n   };\n\n   const addSingleMarker = (): void => {\n      if (marker) {\n         addMarker(new google.maps.LatLng(marker.latitude, marker.longitude));\n      }\n   };\n\n   const addMarker = (location: GoogleLatLng): void => {\n      const marker: GoogleMarker = new google.maps.Marker({\n         position: location,\n         map: map,\n         icon: getIconAttributes(\"#a8db01\"),\n      });\n   };\n\n   const getIconAttributes = (iconColor: string) => {\n      return {\n         path:\n            \"M11.0639 15.3003L26.3642 2.47559e-05L41.6646 15.3003L26.3638 51.3639L11.0639 15.3003 M22,17.5a4.5,4.5 0 1,0 9,0a4.5,4.5 0 1,0 -9,0Z\",\n         fillColor: iconColor,\n         fillOpacity: 0.8,\n         strokeColor: \"#4d3700\",\n         strokeWeight: 2,\n         anchor: new google.maps.Point(30, 50),\n      };\n   };\n\n   // useEffects\n   useEffect(startMap, [map]);\n   useEffect(initEventListener, [map]);\n   useEffect(addSingleMarker, [marker]);\n\n   return (\n      <div className={css.mapContainer}>\n         <h1>\n            <img className={css.hatLogo} src={hat} alt=\"logo\" />\n         </h1>\n         <div ref={ref} className={css.map}></div>\n      </div>\n   );\n};\n\nexport default Map;\n","/Users/lailaali/Documents/projects/personal-projects/homeless-documenting-app/src/utils/GoogleMapsUtils.ts",[],{"ruleId":"23","severity":1,"message":"24","line":247,"column":21,"nodeType":"25","messageId":"26","endLine":247,"endColumn":35},{"ruleId":"23","severity":1,"message":"27","line":326,"column":13,"nodeType":"25","messageId":"26","endLine":326,"endColumn":33},{"ruleId":"28","severity":1,"message":"29","line":346,"column":24,"nodeType":"30","endLine":346,"endColumn":29,"suggestions":"31"},{"ruleId":"28","severity":1,"message":"32","line":348,"column":31,"nodeType":"30","endLine":348,"endColumn":39,"suggestions":"33"},"@typescript-eslint/no-unused-vars","'mapTypeControl' is assigned a value but never used.","Identifier","unusedVar","'marker' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'defaultMapStart'. Either include it or remove the dependency array.","ArrayExpression",["34"],"React Hook useEffect has a missing dependency: 'addMarker'. Either include it or remove the dependency array.",["35"],{"desc":"36","fix":"37"},{"desc":"38","fix":"39"},"Update the dependencies array to be: [defaultMapStart, map]",{"range":"40","text":"41"},"Update the dependencies array to be: [addMarker, marker]",{"range":"42","text":"43"},[7472,7477],"[defaultMapStart, map]",[7550,7558],"[addMarker, marker]"]